#include <Arduino.h>
#include "DFRobotDFPlayerMini.h"
#include "CD74HC4051E_lib.h"

#define READ_PIN 39
#define NUM_INPUTS 25
#define NUM_CHIPS 5

#define DEBUG_MAIN 0

//Ob vklopu naprave je potrebno IO36 oz MP3 TX disconnectat in nazaj priklopiti dokaj hitro
// !!!! še bolje, disconnectanega poveži in nato priklopi

//ESP RXD2 (IO36) -> MP3 TF 16P TX
//ESP TXD2 (IO3) -> MP3 TF 16P RX

#define RXD2 36
#define TXD2 3
DFRobotDFPlayerMini myDFPlayer;

// S2, S1, S0
uint8_t master_mux_array[]={17,16,4};
uint8_t input_mux_array[]={/*26,25,1,*/10,9,27,2,5,13,18,0,15,21,19,23,12,14,22};
//pini od mux1 zakomentirani za serial izpis

void setup()
{
  Serial2.begin(9600, SERIAL_8N1, RXD2, TXD2);

  //#if DEBUG_MAIN
  Serial.begin(115200);
  //#endif
  
  myDFPlayer.begin(Serial2, /*isACK = */true, /*doReset = */true);

    if(mux_checkup(NUM_INPUTS,NUM_CHIPS,input_mux_array,master_mux_array))
  {
    while(1){}
  }
  
  pinMode(READ_PIN,INPUT);
  
  for(int master=0;master<sizeof(master_mux_array);master++)
  {
    pinMode(master_mux_array[master],OUTPUT);
  }
  
  for(int input=0;input<sizeof(input_mux_array);input++)
  {
    pinMode(input_mux_array[input],OUTPUT);
  }

bool cakam=1;
//myDFPlayer.start();
/*
while(cakam)
{
  if(Serial2.available() >0) {
     #if DEBUG_MAIN
     Serial.println("Serial is available."); 
     Serial.println("début");
     #endif
     delay(200);
     //myDFPlayer.volume(15);
     //myDFPlayer.play(1);
     digitalWrite(LED_BUILTIN,1);
     //delay(500);
     cakam=0;    
  } 
  else {
    #if DEBUG_MAIN
     Serial.println("Serial is not available.");
     digitalWrite(LED_BUILTIN,0);
    // myDFPlayer.reset();
    #endif
        }
}
#if DEBUG_MAIN
Serial.println(myDFPlayer.available());
#endif
*/

}

void loop()
{

static bool first=1;
static bool tog=0;
  static uint64_t pins_copy=0;
  static uint64_t pins=0;
  
  pins=pin_check(NUM_INPUTS, NUM_CHIPS,input_mux_array,master_mux_array,READ_PIN);
  if(first)
  {first=0;}
  else
  {
  if(pins!=pins_copy)
  { Serial.println("NOVO");
    uint64_t change=pins^pins_copy;

    for(int q=0;q<NUM_INPUTS;q++)
    {
      if((change&(1<<q))>0 && !(pins_copy&(1<<q))) 
      {
        //myDFPlayer.play(q);

        #if DEBUG_MAIN
        Serial.println(q);
        #endif
      }
    }
    /*
    #if DEBUG_MAIN
    Serial.print(uint16_t(pins),BIN);
    Serial.print("  ");
    Serial.print(uint16_t(pins_copy),BIN);
    Serial.print("  ");
    Serial.println(uint16_t(change),BIN);
    #endif
    */
  }
  } 

  //Serial.println(uint16_t(pins),BIN);
  pins_copy=pins;

/*
static int cnt=0;
static bool smer=0;
myDFPlayer.play(1);
delay(100);
if(cnt<14 && !smer){myDFPlayer.volumeUp();cnt++;}
else if(cnt==14 && !smer) smer=1;
else if(cnt>-14 && smer){myDFPlayer.volumeDown();cnt--;}
else if(cnt==-14 && smer) smer=0; 
Serial.println(cnt);Serial.println(smer);
delay(100);
*/
}
